# SPDX-FileCopyrightText: Â© 2025 Jinwoo Park (pmnxis@gmail.com)
#
# SPDX-License-Identifier: CC0-1.0

[package]
name = "chama-optics"
version = "0.1.1-hotfix1"
description = "The tool load and save photo quickly considering EXIF and user preset"
authors = ["Jinwoo Park <pmnxis@gmail.com>"]
edition = "2024"
include = ["LICENSE-NON-AI-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.88"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu"]

[package.metadata.bundle]
# this related to `target/release/bundle/osx/{name}.app`
name = "Chama Optics"
icon = ["chama-optics-x256.ico", "assets/mac-icon.png"]
identifier = "com.github.pmnxis.chamaoptics"

[dependencies]
egui = "^0.33"
eframe = { version = "^0.33", default-features = false, features = [
    # "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "wayland",       # To support Linux (and CI)
    "x11",           # To support older Linux distributions (restores one of the default features),
    # "winit",
] }
log = "0.4.28"

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }
serde_json = { version = "1" }
exif = { git = "https://github.com/pmnxis/exif-rs", rev = "7cb491cd22aa4a586f37c0c0c3ef5c9ae207d337" }
# kamadak-exif = "0.6.1"
image = { version = "0.25", features = ["serde"] }
base64 = "0.22.1"
rfd = "0.15.3"
egui-file-dialog = "0.12.0"
imageproc = "0.25"
rusttype = "0.9"
anyhow = "1.0"
ab_glyph = "0.2.32"
fast_image_resize = "5.3.0"
lazy_static = "1.5.0"
gcd = "2.3.0"
env_logger = "0.11.8"
# todo - nasm_simd and neon feature later on mozjpeg
mozjpeg = { version = "0.10.13" }
webp = "0.3.1"
oxipng = "9.1.5"
strum = { version = "0.27.2", features = ["std", "derive"] }
strum_macros = { version = "0.27.2" }
rust-i18n = "3.1.5"
sys-locale = "0.3.2"
libheif-rs = { version = "2.4", default-features = false, features = ["v1_18"] }
dirs = "6.0"

[profile.release]
opt-level = 3
lto = "fat"
debug = false
strip = true
codegen-units = 1
# panic = "abort"

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2

[patch.crates-io]
# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }

[build-dependencies]
reqwest = { version = "0.12.24", features = [
    "blocking",
    "rustls-tls",
], default-features = false }
zip = "6.0.0"
md-5 = "0.10.6"
cargo_metadata = "0.23"
winres = "0.1"
